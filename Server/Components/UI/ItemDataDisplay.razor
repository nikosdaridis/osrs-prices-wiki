@inject TooltipService tooltipService

<div class="grid grid-cols-2 gap-4">
    <h4>@Label</h4>
    <h4 style=@Style @ref=_valueElement @onmouseenter=OnValueMouseEnter>@GetValue()</h4>
</div>

@code {
    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public object? Value { get; set; }

    [Parameter]
    public bool TooltipEnabled { get; set; } = true;

    [Parameter]
    public string TooltipFormatter { get; set; } = "0";

    [Parameter]
    public string? Style { get; set; }

    [Parameter]
    public Func<object, string>? Formatter { get; set; }

    private ElementReference _valueElement;

    private TooltipOptions _tooltipOptions = new() { Position = TooltipPosition.Top, Duration = 10000 };

    /// <summary>
    /// Gets formatted value
    /// </summary>
    private string GetValue() =>
        Formatter?.Invoke(Value ?? "") ?? Value?.ToString() ?? "";

    /// <summary>
    /// Handles mouse enter event on value element
    /// </summary>
    private void OnValueMouseEnter()
    {
        if (TooltipEnabled)
            ShowTooltip(_valueElement);
    }

    /// <summary>
    /// Shows raw value on tooltip
    /// </summary>
    private void ShowTooltip(ElementReference elementReference) =>
        tooltipService.Open(elementReference, Value is IConvertible ? Convert.ToDouble(Value).ToString($"N{TooltipFormatter}") : "0", _tooltipOptions);

}
