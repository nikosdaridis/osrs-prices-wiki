@inject NavigationManager NavigationManager
@inject TooltipService TooltipService
@inject ServerService ServerService

<div class="flex p-3 shadow-10 bg-[#38474e] justify-between">
    @if (NavigationManager.Uri != NavigationManager.BaseUri)
    {
        <NavLink href="/">
            <RadzenButton Icon="home" ButtonStyle=ButtonStyle.Light MouseEnter=@(elem => TooltipService.Open(elem, "Home", _tooltipOptionsRight)) />
        </NavLink>
    }
    else
    {
        <RadzenButton Icon="home" ButtonStyle=ButtonStyle.Light Disabled=true MouseEnter=@(elem => TooltipService.Open(elem, "Home", _tooltipOptionsRight)) />
    }

    <RadzenAutoComplete ValueChanged=@OnAutoCompleteValueChanged Data=@_items TextProperty=Name
                        MinLength=2 Style="width: 22rem" Placeholder="Search for item"
                        FilterOperator=StringFilterOperator.Contains FilterCaseSensitivity=FilterCaseSensitivity.CaseInsensitive>
        <Template>
            <NavLink class="flex items-center space-x-4" href=@($"/{StringUtility.BuildUri(context.Id.ToString(), context.Name, '-' )}")>
                <RadzenImage Path="@context.Icon" />
                <RadzenText Text="@context.Name" />
            </NavLink>
        </Template>
    </RadzenAutoComplete>

    <UpdateProgressCircle />
</div>

@code {
    private TooltipOptions _tooltipOptionsRight = new() { Position = TooltipPosition.Right };
    private List<ItemModel>? _items;

    /// <summary>
    /// Gets cached items
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _items = ServerService.GetCachedItems();
    }

    /// <summary>
    /// Navigates to item page on auto complete value changed
    /// </summary>
    private void OnAutoCompleteValueChanged(string itemName)
    {
        ItemModel? item = ServerService.GetCachedItem(itemName);

        if (item is null)
            return;

        NavigationManager.NavigateTo($"/{StringUtility.BuildUri(item.Id.ToString(), item.Name, '-')}");
    }
}
